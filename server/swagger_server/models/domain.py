# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.notification import Notification  # noqa: F401,E501
from swagger_server import util


class Domain(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, create_date: datetime=None, last_modification_date: datetime=None, tag: object=None, latest_notification: Notification=None):  # noqa: E501
        """Domain - a model defined in Swagger

        :param name: The name of this Domain.  # noqa: E501
        :type name: str
        :param create_date: The create_date of this Domain.  # noqa: E501
        :type create_date: datetime
        :param last_modification_date: The last_modification_date of this Domain.  # noqa: E501
        :type last_modification_date: datetime
        :param tag: The tag of this Domain.  # noqa: E501
        :type tag: object
        :param latest_notification: The latest_notification of this Domain.  # noqa: E501
        :type latest_notification: Notification
        """
        self.swagger_types = {
            'name': str,
            'create_date': datetime,
            'last_modification_date': datetime,
            'tag': object,
            'latest_notification': Notification
        }

        self.attribute_map = {
            'name': 'name',
            'create_date': 'create_date',
            'last_modification_date': 'last_modification_date',
            'tag': 'tag',
            'latest_notification': 'latest_notification'
        }

        self._name = name
        self._create_date = create_date
        self._last_modification_date = last_modification_date
        self._tag = tag
        self._latest_notification = latest_notification

    @classmethod
    def from_dict(cls, dikt) -> 'Domain':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Domain of this Domain.  # noqa: E501
        :rtype: Domain
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Domain.


        :return: The name of this Domain.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Domain.


        :param name: The name of this Domain.
        :type name: str
        """

        self._name = name

    @property
    def create_date(self) -> datetime:
        """Gets the create_date of this Domain.


        :return: The create_date of this Domain.
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date: datetime):
        """Sets the create_date of this Domain.


        :param create_date: The create_date of this Domain.
        :type create_date: datetime
        """

        self._create_date = create_date

    @property
    def last_modification_date(self) -> datetime:
        """Gets the last_modification_date of this Domain.


        :return: The last_modification_date of this Domain.
        :rtype: datetime
        """
        return self._last_modification_date

    @last_modification_date.setter
    def last_modification_date(self, last_modification_date: datetime):
        """Sets the last_modification_date of this Domain.


        :param last_modification_date: The last_modification_date of this Domain.
        :type last_modification_date: datetime
        """

        self._last_modification_date = last_modification_date

    @property
    def tag(self) -> object:
        """Gets the tag of this Domain.


        :return: The tag of this Domain.
        :rtype: object
        """
        return self._tag

    @tag.setter
    def tag(self, tag: object):
        """Sets the tag of this Domain.


        :param tag: The tag of this Domain.
        :type tag: object
        """

        self._tag = tag

    @property
    def latest_notification(self) -> Notification:
        """Gets the latest_notification of this Domain.


        :return: The latest_notification of this Domain.
        :rtype: Notification
        """
        return self._latest_notification

    @latest_notification.setter
    def latest_notification(self, latest_notification: Notification):
        """Sets the latest_notification of this Domain.


        :param latest_notification: The latest_notification of this Domain.
        :type latest_notification: Notification
        """

        self._latest_notification = latest_notification
