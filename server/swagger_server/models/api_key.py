# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ApiKey(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, secret: str=None, create_date: datetime=None, last_modification_date: datetime=None):  # noqa: E501
        """ApiKey - a model defined in Swagger

        :param id: The id of this ApiKey.  # noqa: E501
        :type id: str
        :param secret: The secret of this ApiKey.  # noqa: E501
        :type secret: str
        :param create_date: The create_date of this ApiKey.  # noqa: E501
        :type create_date: datetime
        :param last_modification_date: The last_modification_date of this ApiKey.  # noqa: E501
        :type last_modification_date: datetime
        """
        self.swagger_types = {
            'id': str,
            'secret': str,
            'create_date': datetime,
            'last_modification_date': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'secret': 'secret',
            'create_date': 'create_date',
            'last_modification_date': 'last_modification_date'
        }

        self._id = id
        self._secret = secret
        self._create_date = create_date
        self._last_modification_date = last_modification_date

    @classmethod
    def from_dict(cls, dikt) -> 'ApiKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ApiKey of this ApiKey.  # noqa: E501
        :rtype: ApiKey
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this ApiKey.

        ID of the key  # noqa: E501

        :return: The id of this ApiKey.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this ApiKey.

        ID of the key  # noqa: E501

        :param id: The id of this ApiKey.
        :type id: str
        """

        self._id = id

    @property
    def secret(self) -> str:
        """Gets the secret of this ApiKey.

        key secret (full content at creation, first digits afterward)  # noqa: E501

        :return: The secret of this ApiKey.
        :rtype: str
        """
        return self._secret

    @secret.setter
    def secret(self, secret: str):
        """Sets the secret of this ApiKey.

        key secret (full content at creation, first digits afterward)  # noqa: E501

        :param secret: The secret of this ApiKey.
        :type secret: str
        """

        self._secret = secret

    @property
    def create_date(self) -> datetime:
        """Gets the create_date of this ApiKey.


        :return: The create_date of this ApiKey.
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date: datetime):
        """Sets the create_date of this ApiKey.


        :param create_date: The create_date of this ApiKey.
        :type create_date: datetime
        """

        self._create_date = create_date

    @property
    def last_modification_date(self) -> datetime:
        """Gets the last_modification_date of this ApiKey.


        :return: The last_modification_date of this ApiKey.
        :rtype: datetime
        """
        return self._last_modification_date

    @last_modification_date.setter
    def last_modification_date(self, last_modification_date: datetime):
        """Sets the last_modification_date of this ApiKey.


        :param last_modification_date: The last_modification_date of this ApiKey.
        :type last_modification_date: datetime
        """

        self._last_modification_date = last_modification_date
