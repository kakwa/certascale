# coding: utf-8

"""
    certascale API

    Certascale API documentation  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class CertificatePayload(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'certification': 'str',
        'key': 'str',
        'ca': 'str'
    }

    attribute_map = {
        'certification': 'certification',
        'key': 'key',
        'ca': 'ca'
    }

    def __init__(self, certification=None, key=None, ca=None):  # noqa: E501
        """CertificatePayload - a model defined in Swagger"""  # noqa: E501

        self._certification = None
        self._key = None
        self._ca = None
        self.discriminator = None

        if certification is not None:
            self.certification = certification
        if key is not None:
            self.key = key
        if ca is not None:
            self.ca = ca

    @property
    def certification(self):
        """Gets the certification of this CertificatePayload.  # noqa: E501


        :return: The certification of this CertificatePayload.  # noqa: E501
        :rtype: str
        """
        return self._certification

    @certification.setter
    def certification(self, certification):
        """Sets the certification of this CertificatePayload.


        :param certification: The certification of this CertificatePayload.  # noqa: E501
        :type: str
        """

        self._certification = certification

    @property
    def key(self):
        """Gets the key of this CertificatePayload.  # noqa: E501


        :return: The key of this CertificatePayload.  # noqa: E501
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this CertificatePayload.


        :param key: The key of this CertificatePayload.  # noqa: E501
        :type: str
        """

        self._key = key

    @property
    def ca(self):
        """Gets the ca of this CertificatePayload.  # noqa: E501


        :return: The ca of this CertificatePayload.  # noqa: E501
        :rtype: str
        """
        return self._ca

    @ca.setter
    def ca(self, ca):
        """Sets the ca of this CertificatePayload.


        :param ca: The ca of this CertificatePayload.  # noqa: E501
        :type: str
        """

        self._ca = ca

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CertificatePayload):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
